@{
    ViewData["Title"] = "商品管理";
    var suppliers = ViewBag.SupplierList as IEnumerable<object>;
    var platforms = ViewBag.PlatformList as IEnumerable<object>;
    var merchTypes = ViewBag.MerchTypeList as IEnumerable<object>;
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<div class="card mb-3">
  <div class="card-body">
    <div class="row g-2 align-items-end">
      <div class="col-6 col-lg-3">
        <label class="form-label">關鍵字</label>
        <input id="q" class="form-control" placeholder="商品名稱" />
      </div>
      <div class="col-6 col-lg-2">
        <label class="form-label">類型</label>
        <select id="type" class="form-select">
          <option value="">全部</option>
          <option value="game">遊戲</option>
          <option value="notgame">周邊</option>
        </select>
      </div>
      <div class="col-6 col-lg-2">
        <label class="form-label">供應商</label>
        <select id="supplierId" class="form-select">
          <option value="">全部</option>
          @foreach (dynamic s in ViewBag.SupplierList) {
            <option value="@s.SupplierId">@s.SupplierName</option>
          }
        </select>
      </div>
      <div class="col-6 col-lg-2">
        <label class="form-label">平台</label>
        <select id="platformId" class="form-select">
          <option value="">全部</option>
          @foreach (dynamic p in ViewBag.PlatformList) {
            <option value="@p.PlatformId">@p.PlatformName</option>
          }
        </select>
      </div>
      <div class="col-6 col-lg-2">
        <label class="form-label">周邊分類</label>
        <select id="merchTypeId" class="form-select">
          <option value="">全部</option>
          @foreach (dynamic m in ViewBag.MerchTypeList) {
            <option value="@m.MerchTypeId">@m.MerchTypeName</option>
          }
        </select>
      </div>
      <div class="col-6 col-lg-1">
        <label class="form-label">狀態</label>
        <select id="status" class="form-select">
          <option value="all">全部</option>
          <option value="active">上架</option>
          <option value="inactive">下架</option>
        </select>
      </div>

      <div class="col-6 col-lg-2">
        <label class="form-label">排序</label>
        <select id="sort" class="form-select">
          <option value="code">商品代碼</option>
          <option value="name">商品名稱</option>
          <option value="price">價格</option>
          <option value="qty">存量</option>
        </select>
      </div>

      <div class="col-6 col-lg-2">
        <label class="form-label">每頁筆數</label>
        <select id="pageSize" class="form-select">
          <option>12</option><option>20</option><option>40</option><option>60</option>
        </select>
      </div>

      <div class="col-6 col-lg-2">
        <label class="form-label">圖片</label>
        <select id="hasImage" class="form-select">
          <option value="">不限</option>
          <option value="true">有圖</option>
          <option value="false">無圖</option>
        </select>
      </div>

      <div class="col-12 col-lg-4 text-end">
        <div class="btn-group">
          <button id="btnSearch" class="btn btn-primary"><i class="bi bi-search"></i> 查詢</button>
          <button id="btnCreate" class="btn btn-success"><i class="bi bi-plus-circle"></i> 新增</button>
        </div>
        <div class="btn-group ms-2">
          <button id="btnList" class="btn btn-outline-secondary active"><i class="bi bi-list-ul"></i> 清單</button>
          <button id="btnCards" class="btn btn-outline-secondary"><i class="bi bi-grid-3x3-gap"></i> 小卡</button>
        </div>
      </div>
    </div>
  </div>
</div>

<div id="resultHost">載入中...</div>

<!-- 右側覆蓋編輯面板 -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="editorPanel" style="width: 720px">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title">商品編輯</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body" id="editorBody">載入中...</div>
</div>

@section Scripts{
<script>
(function(){
  let mode = 'list';
  const panel = new bootstrap.Offcanvas(document.getElementById('editorPanel'));

  function val(id){ return document.getElementById(id)?.value?.trim() ?? ""; }
  function qs(o){
    const p = new URLSearchParams(Object.entries(o).filter(([k,v])=>v!=="" && v!=null));
    return p.toString() ? ("?"+p.toString()) : "";
  }
  async function load(url){
    const html = await (await fetch(url, {credentials:'include'})).text();
    document.getElementById('resultHost').innerHTML = html;
    wireRowActions();
  }
  function currentParams(extra={}){
    return {
      q: val('q'), type: val('type'),
      supplierId: val('supplierId') || null,
      platformId: val('platformId') || null,
      merchTypeId: val('merchTypeId') || null,
      hasImage: val('hasImage') || null,
      status: val('status'), sort: val('sort'),
      pageSize: val('pageSize')
    };
  }
  async function search(){
    const base = mode==='list' ? '@Url.Action("List","ProductInfoes", new{area="OnlineStore"})' : '@Url.Action("Cards","ProductInfoes", new{area="OnlineStore"})';
    await load(base + qs(currentParams()));
  }

  // 初次載入
  search();

  // 切換清單/小卡
  document.getElementById('btnList').addEventListener('click', ()=>{ mode='list'; search(); document.getElementById('btnList').classList.add('active'); document.getElementById('btnCards').classList.remove('active'); });
  document.getElementById('btnCards').addEventListener('click', ()=>{ mode='cards'; search(); document.getElementById('btnCards').classList.add('active'); document.getElementById('btnList').classList.remove('active'); });

  // 查詢
  document.getElementById('btnSearch').addEventListener('click', search);

  // 新增
  document.getElementById('btnCreate').addEventListener('click', async ()=>{
    const html = await (await fetch('@Url.Action("CreatePanel","ProductInfoes", new{area="OnlineStore"})', {credentials:'include'})).text();
    document.getElementById('editorBody').innerHTML = html;
    panel.show();
    wireForm();
  });

  // 代理事件綁定
  function wireRowActions(){
    // 編輯：.btn-edit data-id
    document.querySelectorAll('.btn-edit').forEach(btn => {
      btn.addEventListener('click', async e => {
        const id = e.currentTarget.getAttribute('data-id');
        const html = await (await fetch('@Url.Action("EditPanel","ProductInfoes", new{area="OnlineStore"})?id='+id, {credentials:'include'})).text();
        document.getElementById('editorBody').innerHTML = html;
        panel.show();
        wireForm();
      });
    });
    // 上下架
    document.querySelectorAll('.btn-toggle').forEach(btn => {
      btn.addEventListener('click', async e => {
        const id = e.currentTarget.getAttribute('data-id');
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
        const resp = await fetch('@Url.Action("ToggleActive","ProductInfoes", new{area="OnlineStore"})', {
          method:'POST', credentials:'include', headers:{'Content-Type':'application/x-www-form-urlencoded'},
          body: 'id='+encodeURIComponent(id)+'&__RequestVerificationToken='+encodeURIComponent(token)
        });
        await resp.text(); search();
      });
    });
  }

  function wireForm(){
    const form = document.getElementById('productForm');
    if (!form) return;
    form.addEventListener('change', () => {
      const t = form.querySelector('[name="ProductType"]').value;
      const isGame = (t==='game');
      form.querySelectorAll('[data-game]').forEach(x => x.classList.toggle('d-none', !isGame));
      form.querySelectorAll('[data-other]').forEach(x => x.classList.toggle('d-none', isGame));
    });
    const btnSave = form.querySelector('#btnSave');
    btnSave.addEventListener('click', async ()=>{
      const action = form.getAttribute('data-mode')==='edit' ? '@Url.Action("Edit","ProductInfoes", new{area="OnlineStore"})' : '@Url.Action("Create","ProductInfoes", new{area="OnlineStore"})';
      const fd = new FormData(form);
      const resp = await fetch(action, { method:'POST', body: fd, credentials:'include'});
      const json = await resp.json();
      if (json.ok) { bootstrap.Offcanvas.getInstance(document.getElementById('editorPanel')).hide(); search(); }
      else {
        const host = form.querySelector('#formMessages'); host.innerHTML = '<div class="alert alert-danger">'+(json.message||'失敗')+'</div>';
      }
    });
  }
})();
</script>
}
